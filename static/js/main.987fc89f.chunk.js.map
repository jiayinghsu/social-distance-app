{"version":3,"sources":["components/Barchart/helpers.js","components/Barchart/BarChart.js","components/helpers.js","pages/Slider.js","components/Survey/SurveyComponent.js","pages/Kanban/TodoList.js","pages/Kanban/Kanban.js","pages/DDList/DDList.js","pages/Completed.js","pages/Consent.js","Experiment.js","index.js"],"names":["index","randomNum","Math","floor","random","getInitialData","data","i","getAppendedData","ret","map","d","push","id","value","name","BarGroup","state","y","width","abs","className","transform","barPadding","height","barHeight","style","fill","opacity","x","alignmentBaseline","round","BarChart","props","handleAdd","bind","handleRemove","handleUpdate","this","setState","slice","timing","duration","you","opponent","nodes","toFixed","keyAccessor","start","startTransition","enter","enterTransition","update","updateTransition","leave","leaveTransition","person","ind","Component","fromLocalStorage","key","defaultValue","window","localStorage","getItem","JSON","parse","toLocalStorage","setItem","stringify","PageContainer","styled","div","StyledApp","StyledButton","button","fromValue","SliderPage","nameData","names","Object","keys","duplicatedNames","sort","useState","entries","fontSize","min","max","step","tooltip","onChange","first","onClick","length","confirm","open","close","Survey","applyTheme","StyledSurvey","Link","Container","TodoList","header","onInput","removeItem","setName","placeholder","onKeyUp","event","keyCode","target","LocalButton","ColContainer","Kanban","object","addName","listId","console","log","newState","history","useHistory","names0","filter","keyValue","names1","names2","names3","names4","DDList","allNames","orderedNames","setUsers","renderUsers","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","onDragEnd","result","destination","source","reason","droppableId","users","assign","droppedUser","splice","droppableProps","to","display","marginTop","Complete","Consent","Experiment","path","exact","component","Slider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.987fc89f.chunk.js","sourcesContent":["let index = 1;\n\nlet randomNum = () => 20 + Math.floor(80 * Math.random());\n\nfunction getInitialData() {\n  let numItems = 10;\n  let data = [];\n  for (let i = 0; i < numItems; i++) {\n    data = getAppendedData(data);\n  }\n  return data;\n}\n\nfunction getAppendedData(data) {\n  let ret = data.map(d => d);\n  ret.push({\n    id: \"id-\" + index,\n    value: randomNum(),\n    name: \"Item \" + index\n  });\n  index++;\n  return ret;\n}\n\nfunction getTruncatedData(data) {\n  let ret = data.map(d => d).slice(1);\n  return ret;\n}\n\nfunction getUpdatedData(data) {\n  let ret = data.map(d => ({ id: d.id, value: randomNum(), name: d.name }));\n  return ret;\n}\n\nexport { getInitialData, getAppendedData, getTruncatedData, getUpdatedData };\n","import React, {Component} from \"react\";\nimport NodeGroup from \"react-move/NodeGroup\";\nimport {\n    getInitialData,\n    getAppendedData,\n    getTruncatedData,\n    getUpdatedData\n} from \"./helpers.js\";\nimport \"./barchart.css\";\n\nlet barHeight = 35;\nlet barPadding = 2;\nlet barColour = \"#23aaff\";\nlet widthScale = (d) => Math.abs(d*6.5);\n\nfunction BarGroup({data: {name}, state: {value, y}, ..._props}) {\n    let width = widthScale(value);\n    let yMid = barHeight * 0.5;\n\n    return <g className=\"bar-group\" transform={`translate(${100}, ${y})`}>\n        <rect\n            y={barPadding * 0.5}\n            width={width}\n            height={barHeight - barPadding}\n            style={{fill: barColour, opacity: 1}}\n        />\n        <text\n            className=\"value-label\"\n            x={width - 10}\n            y={yMid}\n            alignmentBaseline=\"middle\"\n        >{Math.round(value)}</text>\n        <text\n            className=\"name-label\"\n            x={-10}\n            y={yMid}\n            alignmentBaseline=\"middle\"\n            style={{opacity: 1}}\n        >{name}</text>\n    </g>;\n\n}\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: getInitialData()\n        };\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    handleAdd() {\n        this.setState({\n            data: getAppendedData(this.state.data)\n        });\n    }\n\n    handleRemove() {\n        this.setState({\n            data: getTruncatedData(this.state.data)\n        });\n    }\n\n    handleUpdate() {\n        this.setState({\n            data: getUpdatedData(this.state.data)\n        });\n    }\n\n    startTransition(d, i) {\n        return {value: 0, y: i * barHeight, opacity: 0};\n    }\n\n    enterTransition(d) {\n        return {value: [d.value], opacity: [1], timing: {duration: 250}};\n    }\n\n    updateTransition(d, i) {\n        return {value: [d.value], y: [i * barHeight], timing: {duration: 300}};\n    }\n\n    leaveTransition(d) {\n        return {y: [-barHeight], opacity: [0], timing: {duration: 250}};\n    }\n\n    render() {\n        const {you, opponent, name, className, ..._props} = this.props;\n        const nodes = [{\n            name: \"You receive: \",\n            value: you.toFixed(1)\n        }, {\n            name: `${name} receives: `,\n            value: opponent.toFixed(1)\n        }]\n        return (\n            <div className={className}>\n                <svg width=\"100%\" height=\"100\">\n                    <g className=\"chart\">\n                        <NodeGroup\n                            data={nodes}\n                            keyAccessor={d => d.name}\n                            start={this.startTransition}\n                            enter={this.enterTransition}\n                            update={this.updateTransition}\n                            leave={this.leaveTransition}\n                        >\n                            {(nodes) => (\n                                <g>\n                                    {nodes.map((person, ind) => (\n                                        <BarGroup key={ind} {...person}/>\n                                    ))}\n                                </g>\n                            )}\n                        </NodeGroup>\n\n                    </g>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default BarChart;\n","export function fromLocalStorage(key, defaultValue = null) {\n    let value = window.localStorage.getItem(key);\n    if (value === null) return defaultValue;\n    return JSON.parse(value);\n}\n\nexport function toLocalStorage(key, value) {\n    window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function removeLocalStorage(key) {\n    window.localStorage.removeItem(key);\n}\n\n","import React, {useEffect, useState} from 'react';\nimport BarChart from '../components/Barchart/BarChart';\nimport 'tachyons';\nimport '../App.css';\nimport styled from \"styled-components\";\nimport 'react-rangeslider/lib/index.css';\nimport RangeSlider from \"react-rangeslider\";\nimport {fromLocalStorage, toLocalStorage} from \"../components/helpers\";\n\nconst PageContainer = styled.div`\n  padding: 40px 100px;\n\n  h1 {\n    padding: 0;\n    margin: auto 0;\n  }\n`;\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  /*font-family: Raleway;*/\n\n  > article {\n    margin: 0 auto;\n    padding: 50px 0 0 0;\n    top: 0;\n    bottom: 0;\n    width: min(100%, 600px);\n\n    .aside {\n      padding-left: 100px;\n      padding-right: 100px;\n    }\n\n    .left {\n      padding-left: 0;\n      padding-right: 100px;\n    }\n\n    > div {\n      overflow-x: hidden;\n    }\n\n    p {\n      text-align: left;\n    }\n  }\n\n  //override slider default\n  .rangeslider .rangeslider__fill {\n    background: #23aaff !important;\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3) !important;\n  }\n\n  .rangeslider .rangeslider__handle {\n    outline: none;\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3) !important;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  font-weight: 900;\n\n  user-select: none;\n  cursor: pointer;\n\n  border: solid 2px transparent;\n  border-radius: 24px;\n\n  padding: 7px 18px;\n  line-height: 1.7em;\n\n  color: #23aaff;\n  background-color: #fafafa;\n\n  &:hover, &:focus {\n    outline: none;\n    border: solid 2px #23aaff;\n  }\n\n  &:active {\n    color: white;\n    background-color: #23aaff;\n  }\n`;\n\n\n/* the main thing is that in react, if you want to manage the states,\n* the state have to be managed outside of a presentation (pure) component.\n*\n* Google \"control in pure component react\".\n* */\n\nfunction fromValue(name, value = null) {\n    /* use random value if the value is `null`. */\n    if (value === null) value = Math.random();\n    return {\n        value,\n        name,\n        you: -10 * value ** 2 + 50,\n        opponent: 20 * value + 30\n    }\n}\n\nexport default function SliderPage({}) {\n    const nameData = fromLocalStorage(\"names\", {});\n    //console.log(nameData);\n    const names = Object.keys(nameData);\n    //console.log(names)\n\n    //duplicate 3 times\n    const duplicatedNames = [...names, ...names, ...names, \"You\"]\n\n    // randomize items in the list\n    duplicatedNames.sort(() => Math.random() - 0.5)\n\n    const [entries, setState] = useState(duplicatedNames.map((name) => fromValue(name,)))\n\n    function setValue(value) {\n        const first = value[0];\n        setState([\n            fromValue(first.name, value),\n            ...entries.slice(1)\n        ]);\n    }\n\n    const removeFirstEntry = () => {\n        if (entries.length === 1) {\n            if (window.confirm(\"This is the end of the experiment. Thank you for your participation!\")) {\n                window.open(\"/complete\", \"_self\");\n                window.close();\n            }\n        } // need to fix this to get rid of the error messages\n        setState(entries.slice(1));\n    }\n\n    return <PageContainer>\n        <h1 className=\"app-title\">\n            Part III: Welfare Tradeoff\n        </h1>\n        <p style={{fontSize: 20}}>\n            <p><b>Instruction:</b> Please move the slider to the point where the rewards you and the other receive seem\n                the best to you.\n                Click submit each time after you finish.\n                You will need to trade for about 75 times with different people from your social network in Part II\n                until you reach the final completion page,\n                where you will receive a reward based on your performance.</p>\n        </p>\n        <StyledApp className='App'>\n            <article>\n                {/*show the first one*/\n                    entries ?\n                        <>\n                            <div className=\"aside\">\n                                <RangeSlider min={-1.5}\n                                             max={1.5}\n                                             step={0.05}\n                                             tooltip={false}\n                                             value={entries[0].value}\n                                             onChange={setValue}/>\n                            </div>\n                            <BarChart className=\"left\" {...entries[0]}/>\n                        </>\n                        : null}\n                <StyledButton onClick={removeFirstEntry}>Submit</StyledButton>\n            </article>\n        </StyledApp>\n    </PageContainer>\n\n}\n","import React, {Component} from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/modern.css\";\nimport {Link} from 'react-router-dom';\nimport styled from \"styled-components\";\n\nSurvey.StylesManager.applyTheme(\"modern\");\nconst StyledSurvey = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  \n  font-family: Raleway;\n  \n  > article {\n    margin: 0 auto;\n    padding: 100px 0 0 0;\n    top: 0;\n    bottom: 0;\n    width: min(80%, 600px);\n    \n    .left {\n        padding-left: 0;\n        padding-right: 100px;\n    }\n    > div {\n        overflow-x: hidden;\n    }\n \n    p { text-align: left; }\n  }\n`;\n\nconst StyledButton = styled(Link)`\n    font-weight: 900;\n    \n    display: inline-block;\n    text-decoration: none;\n    user-select: none;\n    cursor: pointer;\n    \n    right: 0;\n    \n    border: solid 2px transparent;\n    border-radius: 24px;\n    \n    padding: 7px 18px;\n    line-height: 1.7em;\n    \n    color: #23aaff;\n    background-color: #fafafa;\n    \n    &:hover, &:focus {\n        outline:none;\n        border: solid 2px #23aaff;\n    }\n    &:active {\n        color: white;\n        background-color: #23aaff;\n    }\n    \n }\n`;\n\nclass SurveyComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.onCompleteComponent = this.onCompleteComponent.bind(this)\n    }\n\n    onCompleteComponent = () => {\n        this.setState({\n            isCompleted: true\n        })\n    }\n\n    render() {\n        const json = {\n            checkErrorsMode: \"onValueChanged\",\n            showQuestionNumbers: \"off\",\n            pages: [\n                {\n                    name: \"page1\",\n                    elements: [\n                        {\n                            type: \"matrixdynamic\",\n                            name: \"orderList\",\n                            rowCount: 15,\n                            minRowCount: 1,\n                            title: \"Social Distance Questionnaire\",\n                            description: \"Imagine a list of at least 15 people closest to you in the world ranging from your dearest friend or relative at position #1 to an acquaintance or a competitor at #15. The person at #1 would be someone you know well and is your closest friend or relative. \" +\n                                \"The person at #15 might be someone you recognize and encounter but perhaps you may not even know their name.\",\n                            detailPanelMode: \"underRow\",\n                            addRowText: \"Add a person\",\n                            removeRowText: \"Remove\",\n                            columns: [\n                                {\n                                    name: \"id\",\n                                    title: \"Rank\",\n                                    cellType: \"expression\",\n                                    expression: \"{rowIndex}\"\n                                },\n                                {\n                                    name: \"Name\",\n                                    title: \"Name\",\n                                    cellType: \"text\",\n                                    isRequired: true\n                                },\n                                {\n                                    name: \"relativeType\",\n                                    title: \"Relations\",\n                                    cellType: \"dropdown\",\n                                    isRequired: true,\n                                    choices: [\n                                        \"Kin relations\",\n                                        \"Spouses\",\n                                        \"Close friends\",\n                                        \"Acquaintances\",\n                                        \"Competitor\",\n                                        \"Enemy\",\n                                        \"Other (Please specify)\"\n                                    ]\n                                },\n                                {\n                                    name: \"Other\",\n                                    title: \"Other\",\n                                    cellType: \"text\",\n                                    isRequired: false\n                                }\n                            ],\n                        }\n                    ]\n                }\n            ]\n        };\n        const survey = new Survey.Model(json);\n        const surveyRender = !this.state.isCompleted ? (\n            <Survey.Survey\n                json={json}\n                showCompletedPage={false}\n                onComplete={this.onCompleteComponent}\n            />\n        ) : null\n        const onSurveyCompletion = this.state.isCompleted ? (\n            <StyledSurvey>\n                <article>\n                    <h1>Instruction</h1>\n                    <p>\n                        In the next section, you will need to complete the welfare tradeoff task with the persons you\n                        just filled in the survey.\n                        This process takes about 40-50 minutes. Please click \"Continue\" when you are ready.\n                    </p>\n                    <StyledButton to='/slider' style={{marginTop: \"25px\"}}>Continue</StyledButton>\n                </article>\n            </StyledSurvey>\n\n        ) : null\n        return (\n            //<Survey.Survey model={survey}/>\n            <>\n                {surveyRender}\n                {onSurveyCompletion}\n            </>\n\n        );\n    }\n}\n\nexport default SurveyComponent;\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  position: relative;\n  background-color: rgba(35, 170, 255, 0.2);\n  border-radius: 20px;\n  margin-top: 40px;\n\n  min-height: 450px;\n\n  .row {\n    margin: 10px 0;\n    border-radius: 21px;\n  }\n\n  .title.row {\n    //  add min-height to accommodate multi-line headers\n    min-height: 61px;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n\n    h2 {\n      margin: 10px 18px 0 18px;\n      text-align: left;\n    }\n  }\n\n  input.row {\n    min-height: 36px;\n    border: solid 1px gray;\n    padding: 0 12px;\n    margin: 15px;\n\n    &:focus {\n      outline: none;\n      border: solid 1px #23aaff;\n    }\n  }\n\n  .item.row {\n    padding: 0 7px;\n    line-height: 32px;\n    border-left: solid 4px white;\n    border-radius: 0;\n    margin: 15px;\n\n    .button {\n      cursor: pointer;\n      vertical-align: bottom;\n      position: absolute;\n      right: 0;\n      border-radius: 16px;\n      padding: 0 12px;\n      color: transparent;\n    }\n\n    &:hover {\n      //box-shadow: 1px 1px 20px red;\n      border-left: solid 4px #23aaff;\n\n      .button {\n        color: #ff4141;\n        background: #fafafa;\n\n        &:hover {\n          color: white;\n          background: #ff4949;\n        }\n      }\n    }\n  }\n`;\n\n\nexport default function TodoList({className, header, names, onInput, removeItem}) {\n    const [name, setName] = useState('')\n\n    function onChange(event) {\n        setName(event.target.value);\n    }\n\n    function onSubmit(event) {\n        if (event.keyCode === 13) {\n            onInput(name);\n            setName(\"\");\n        }\n    }\n\n    return <Container className={className}>\n        <div className=\"title row\">\n            <h2>{header}</h2>\n        </div>\n        <input className=\"row\"\n               placeholder=\"Add name\"\n               value={name}\n               onKeyUp={onSubmit}\n               onChange={onChange}/>\n        {names.map(name => <div className=\"item row\">\n            <span>{name}</span>\n            <span className=\"button\" onClick={() => removeItem(name)}>delete</span>\n        </div>)}\n    </Container>;\n}","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport TodoList from \"./TodoList\";\nimport {removeLocalStorage, toLocalStorage} from \"../../components/helpers\";\nimport {StyledButton} from \"../Slider.js\";\nimport {Link, useHistory} from \"react-router-dom\";\n\n\nconst PageContainer = styled.div`\n  padding: 40px 100px;\n\n  h1 {\n    padding: 0;\n    margin: auto 0;\n  }\n`;\n\nconst LocalButton = styled(StyledButton)`\n  margin-top: 15px;\n`;\n\nconst ColContainer = styled.div`\n\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n  column-gap: 30px;\n\n  @media (max-width: 920px) {\n    grid-template-columns: repeat(2, 3fr);\n  }\n  @media (min-width: 921px) and (max-width: 1220px) {\n    grid-template-columns: repeat(3, 4fr);\n  }\n  @media (min-width: 1221px) and (max-width: 1560px) {\n    grid-template-columns: repeat(4, 4fr);\n  }\n  @media (min-width: 1561px) {\n    grid-template-columns: repeat(5, 5fr);\n  }\n\n\n  .col {\n    grid-column: span 1\n  }\n`;\n\n\nexport default function Kanban({onChange = (object) => toLocalStorage('names', object)}) {\n    const [state, setState] = useState({})\n\n    function addName(listId, name) {\n        console.log(\"addName\", listId, name)\n        let newState = {...state, [name]: listId};\n        setState(newState)\n        onChange(newState);\n    }\n\n    const history = useHistory();\n\n    function onContinue() {\n        removeLocalStorage(\"all_names\");\n        history.push(\"/ranking\")\n    }\n\n    const names0 = Object.entries(state).filter((keyValue) => keyValue[1] === 0).map(([key, value]) => key);\n    const names1 = Object.entries(state).filter((keyValue) => keyValue[1] === 1).map(([key, value]) => key);\n    const names2 = Object.entries(state).filter((keyValue) => keyValue[1] === 2).map(([key, value]) => key);\n    const names3 = Object.entries(state).filter((keyValue) => keyValue[1] === 3).map(([key, value]) => key);\n    const names4 = Object.entries(state).filter((keyValue) => keyValue[1] === 4).map(([key, value]) => key);\n\n    // filter by list, create three lists\n    return <PageContainer>\n        <h1 className=\"app-title\">\n            Part I: List Relationships\n        </h1>\n        <p style={{fontSize: 20}}>\n            <p><b>Instruction:</b> Please input the first name of at least five people in each of the five categories\n                below. Press enter to add\n                names. You can delete a name by hovering your mouse over the name and click the delete button.\n                Once finished, please press the continue button to the next page.\n                You will not be able to change the names after you press the continue button.\n            </p>\n        </p>\n        <ColContainer>\n            <TodoList className=\"col\" header={\"Family, Spouse or Partner\"} names={names0}\n                      onInput={name => addName(0, name)} removeItem={name => addName(-1, name)}/>\n            <TodoList className=\"col\" header={\"Friends\"} names={names1} onInput={name => addName(1, name)}\n                      removeItem={name => addName(-1, name)}/>\n            <TodoList className=\"col\" header={'Neighbors and Colleagues'} names={names2}\n                      onInput={name => addName(2, name)} removeItem={name => addName(-1, name)}/>\n            <TodoList className=\"col\" header={'Acquaintances or strangers'} names={names3}\n                      onInput={name => addName(3, name)} removeItem={name => addName(-1, name)}/>\n            <TodoList className=\"col\" header={'Competitors or People with Conflict of Interest'} names={names4}\n                      onInput={name => addName(4, name)} removeItem={name => addName(-1, name)}/>\n        </ColContainer>\n\n        <LocalButton onClick={onContinue}>Continue</LocalButton>\n    </PageContainer>;\n}","import React, {Component, useEffect, useState} from 'react';\nimport './users.css';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport {fromLocalStorage, toLocalStorage} from \"../../components/helpers\";\nimport {Link} from \"react-router-dom\";\nimport {StyledButton} from \"../Slider.js\"\nimport styled from \"styled-components\";\n\nfunction DDList() {\n    let allNames = fromLocalStorage('all_names', );\n    if (!allNames) {\n        let orderedNames = fromLocalStorage('names', {});\n        allNames = Object.entries(orderedNames).map(([name, listId]) => name);\n    }\n    const [names, setUsers] = useState(allNames)\n\n    const onDragEnd = result => {\n        const {destination, source, reason} = result;\n        if (!destination || reason === 'CANCEL') return;\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n\n        const users = Object.assign([], names);\n        const droppedUser = names[source.index];\n\n        users.splice(source.index, 1);\n        users.splice(destination.index, 0, droppedUser);\n        setUsers(users);\n        toLocalStorage('all_names', users)\n    }\n\n    const renderUsers = (name, index) => {\n        return <Draggable\n            key={index}\n            draggableId={index + ' '}\n            index={index}>\n\n            {(provided) => (\n                <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\n                    <div className='item'>\n                        <div>{index + 1}</div>\n                        <div className='name'>\n                            <div>{name}</div>\n                        </div>\n\n                    </div>\n                </div>\n            )}\n\n        </Draggable>\n    }\n\n    const PageContainer = styled.div`\n      padding: 40px 100px;\n\n      h1 {\n        padding: 0;\n        margin: auto 0;\n      }\n    `;\n\n    return <PageContainer>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <h1 className=\"app-title\">\n                Part II: Rank Relationships\n            </h1>\n            <p style={{fontSize: 20}}>\n                <p><b>Instruction:</b> Please rank the people below based on the closeness of your relationships by dragging and dropping their names. The person at #1 would be\n                    someone you know well and is your closest friend or relative. The person at #15 or more might be someone\n                    you feel most distant. Once finished, please press the continue button to the next page.</p>\n            </p>\n                <div className='users'>\n                    <Droppable droppableId=\"dp1\">\n                        {(provided) => (\n                            <div ref={provided.innerRef} {...provided.droppableProps}>\n                                {names.map(renderUsers)}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </div>\n                <Link to=\"/tradeoff\" style={{display: \"block\", marginTop: \"15px\"}}><StyledButton>Continue</StyledButton></Link>\n        </DragDropContext>\n    </PageContainer>\n}\n\nexport default DDList\n\n","import React from 'react';\nimport styled from \"styled-components\";\n\n\nconst PageContainer = styled.div`\n  padding: 40px 100px;\n\n  h3 {\n    padding: 0;\n    margin: auto 0;\n  }\n`;\n\nfunction Complete() {\n    return <PageContainer>\n        <div>\n            <h3>Instruction for receiving payments.</h3>\n        </div>\n        </PageContainer>;\n}\n\nexport default Complete;\n\n\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {StyledButton} from \"./Slider\";\nimport {Link} from \"react-router-dom\";\n\n\nconst PageContainer = styled.div`\n  padding: 40px 100px;\n\n  h3 {\n    padding: 0;\n    margin: auto 0;\n  }\n`;\n\nfunction Consent() {\n    return <PageContainer>\n        <div>\n            <h3>Instruction for consent form [to be added].</h3>\n        </div>\n        <Link to=\"/list\" style={{display: \"block\", marginTop: \"15px\"}}><StyledButton>Continue</StyledButton></Link>\n    </PageContainer>;\n}\n\nexport default Consent;\n\n\n","import React, {useState} from 'react';\nimport SurveyComponent from './components/Survey/SurveyComponent';\nimport Slider from './pages/Slider';\nimport {Route, Switch} from 'react-router';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Kanban from \"./pages/Kanban/Kanban\";\nimport DDList from \"./pages/DDList/DDList\";\nimport Complete from \"./pages/Completed\";\nimport Consent from \"./pages/Consent\";\n\nfunction Experiment() {\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/welcome\" exact component={Consent}/>\n                <Route path=\"/list\" exact component={Kanban}/>\n                <Route path=\"/ranking\" exact component={DDList}/>\n                <Route path='/tradeoff' exact component={Slider}/>\n                <Route path='/complete' exact component={Complete}/>\n                {/*<Route path=\"/start\" exact component={SurveyComponent}/>*/}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default Experiment;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Slider from './pages/Slider';\nimport Experiment from './Experiment';\nimport 'tachyons';\n\nReactDOM.render(<Experiment/>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}